name: .Net and Angular Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy-frontend:
    name: Angular Build
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend/kodeordsmanager.ui

    steps:
      - name: Checkout the source code
        uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/kodeordsmanager.ui/package-lock.json

      - name: Install dependencies
        run: npm ci

      #      - name: Run tests
      #        run: npm run test

      - name: Build Angular
        run: npm run build


      - name: Deploy Angular via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.ftp_host }}
          username: ${{ secrets.ftp_user }}
          password: ${{ secrets.ftp_password }}
          protocol: ftps
          local-dir: frontend/kodeordsmanager.ui/dist/kodeordsmanager.ui/browser/
          server-dir: /kodeordsmanager.ui/

          # Sletter filer på serveren som ikke findes lokalt (valgfrit; brug med omtanke)
          dangerous-clean-slate: false
          
          # Udeluk typiske unødvendige filer, hvis de skulle snige sig med
          exclude: |
            **/.vscode
            **./idea
            **/node_modules/**
            **/.env
            **/*.map

  build-and-deploy-backend:
    name: Backend (.NET Web API)
    runs-on: ubuntu-latest
  
    defaults:
      run:
        working-directory: backend/kodeordsmanager
  
    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x.x'
  
      - name: Restore
        run: dotnet restore
  
      - name: Publish (Release)
        run: dotnet publish -c Release -r win-x86 --self-contained true -o ./publish
  
      - name: Deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.ftp_host }}
          username: ${{ secrets.ftp_user }}
          password: ${{ secrets.ftp_password }}
          protocol: ftps
          local-dir: backend/kodeordsmanager/publish/
          server-dir: /kodeordsmanager.api/
          dangerous-clean-slate: false
          exclude: |
            **/.git*
            **/obj/**
            **/bin/**
            **/appsettings.Development.json
  
